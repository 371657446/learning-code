Rules reminder:
# DEBUG < INFO < WARN < ERROR < FATAL
### 设置级别和目的地(这里多个目的地) ###
#级别为DEBUG
#目的地为CONSOLE，zhangLog；zhangLog为自定义输出端，可随意命名
log4j.rootLogger=DEBUG,CONSOLE,zhangLog
### 这里的com.wuwii是我项目的包名，也就是在这个包记录日志时，开发阶段是只记录DEBUG及以上级别的日志，正式上线的时候可以改成INFO、ERROR
#### 当然就可以设定特定包打印的级别
log4j.logger.com.wuwii=DEBUG
#Log4j提供的appender有以下几种：
#org.apache.log4j.ConsoleAppender（控制台），
#org.apache.log4j.FileAppender（文件），
#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），
#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
### 输出到控制台 ###
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Target=System.out
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
# My logging configuration...
## 可以设置特定工具的打印日志级别
log4j.logger.org.mybatis.jpetstore=INFO
log4j.logger.com.ibatis=INFO
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=INFO
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=INFO
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=INFO
log4j.logger.java.sql.Connection=INFO
log4j.logger.java.sql.Statement=INFO
log4j.logger.java.sql.PreparedStatement=INFO
log4j.logger.java.sql.ResultSet=INFO
### 输出到日志文件 ###
#写到文件中，并且追加
log4j.appender.zhangLog=org.apache.log4j.DailyRollingFileAppender
# 设置文件输出位置
log4j.appender.zhangLog.File=logs/wuwii.log
#log4j.appender.zhangLog.File=${catalina.home}/logs/wuwii/debug.log
#log4j.appender.zhangLog.File =/var/debug/debug.log
log4j.appender.zhangLog.Append=true
## 只输出DEBUG级别以上的日志
log4j.appender.zhangLog.Threshold=DEBUG
#'.'yyyy-MM-dd: 设置为每天产生一个新的文件
#1)’.’yyyy-MM: 每月
#2)’.’yyyy-ww: 每周
#3)’.’yyyy-MM-dd: 每天
#4)’.’yyyy-MM-dd-a: 每天两次
#5)’.’yyyy-MM-dd-HH: 每小时
#6)’.’yyyy-MM-dd-HH-mm: 每分钟
log4j.appender.zhangLog.DatePattern='.'yyyy-MM-dd
#当文件达到2kb时，文件会被备份成"debug.txt.1"，新的"log.txt"继续记录log信息
## 在DailyRollingFileAppender 没这个属性
#log4j.appender.zhangLog.MaxFileSize = 2KB
#最多建5个文件，当文件个数较多时，后面不再新建文件
## 在DailyRollingFileAppender 没这个属性
#log4j.appender.zhangLog.MaxBackupIndex = 5
log4j.appender.zhangLog.layout=org.apache.log4j.PatternLayout
log4j.appender.zhangLog.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%t:%r] - [%p] [%c{1}:%L] [%M] %m%n
#设置子Logger是否继承父Logger的输出源
#默认情况下子Logger会继承父Logger的appender，也就是说子Logger会在父Logger的appender里输出
log4j.additivity.zhangLog=false