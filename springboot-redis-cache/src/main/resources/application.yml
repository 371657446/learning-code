spring:
  datasource:
    url: jdbc:mysql://localhost:3306/learn1?useSSL=false&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
  jpa:
    show-sql: true
    database: mysql
    hibernate:
    # update 更新表结构
    # create 每次启动删除上次表，再创建表，会造成数据丢失
    # create-drop： 每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
    # validate ：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  redis:
      host: 120.79.208.199 # 120.79.208.199 # host ,默认 localhost
      port: 6379 # 端口号，默认6379
      pool:
      # 设置都是默认值，可以按需求设计
        max-active: 8 # 可用连接实例的最大数目，默认值为8；如果赋值为-1，则表示不限制；
        max-idle: 8  # 控制一个pool最多有多少个状态为idle(空闲的)的redis实例，默认值也是8。
        max-wait: -1 # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。
        min-idle: 0 # 控制一个pool最少有多少个状态为idle(空闲的)的redis实例，默认值为0。
      timeout: 0 # 连接超时时间 单位 ms，默认为0
      password: KronChan123 # 密码，根据自己的 redis 设计，默认为空
